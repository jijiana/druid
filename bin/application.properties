#server.port=6665
# 只有下面三个是必填项（使用内嵌数据库的话这三个也可以不用填，会使用默认配置），其他配置不是必须的
spring.datasource.druid.url=jdbc:mysql://localhost:3306/db_test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&allowPublicKeyRetrieval=true
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
# driver-class-name 非必填可根据url推断
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.show_sql = false

logging.level.org.hibernate.SQL=false

#60 sec
spring.datasource.hikari.connection-timeout=160000
# max 5
spring.datasource.hikari.maximum-pool-size=10000
#Druid \u6570\u636E\u6E90\u914D\u7F6E\uFF0C\u7EE7\u627Fspring.datasource.* \u914D\u7F6E\uFF0C\u76F8\u540C\u5219\u8986\u76D6
spring.datasource.druid.initial-size=2
spring.datasource.druid.max-active=30
spring.datasource.druid.min-idle=2
spring.datasource.druid.max-wait=1234
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=5
#spring.datasource.druid.max-open-prepared-statements= #\u7B49\u4EF7\u4E8E\u4E0A\u9762\u7684max-pool-prepared-statement-per-connection-size
spring.datasource.druid.validation-query=select 1
spring.datasource.druid.validation-query-timeout=1
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.time-between-eviction-runs-millis=10000
spring.datasource.druid.min-evictable-idle-time-millis=30001
spring.datasource.druid.async-close-connection-enable=true

spring.datasource.druid.filters=stat,wall
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#com.alibaba.druid.support.http.WebStatFilter=*. js ,*. gif ,*. jpg ,*. png ,*. css ,*. ico ,/* 
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

# \u8BBE\u7F6E\u767D\u540D\u5355
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1

# \u8BBE\u7F6E\u9ED1\u540D\u5355
#spring.datasource.druid.stat-view-servlet.deny=9.181.90.133

spring.datasource.druid.web-stat-filter.enabled=false

spring.datasource.druid.aop-patterns=com.alibaba.druid.spring.boot.demo.service.*

# \u81EA\u5B9A\u4E49StatFilter \u914D\u7F6E \u5176\u4ED6 Filter \u4E0D\u518D\u6F14\u793A
spring.datasource.druid.filter.stat.db-type=h2
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000


 
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.connection-log-enabled=true
spring.datasource.druid.filter.slf4j.connection-close-after-log-enabled=true
spring.datasource.druid.filter.slf4j.connection-commit-after-log-enabled=true
spring.datasource.druid.filter.slf4j.connection-connect-after-log-enabled=true
spring.datasource.druid.filter.slf4j.connection-connect-before-log-enabled=true
spring.datasource.druid.filter.slf4j.connection-log-error-enabled=true
spring.datasource.druid.filter.slf4j.data-source-log-enabled=true
spring.datasource.druid.filter.slf4j.result-set-log-enabled=true
spring.datasource.druid.filter.slf4j.statement-log-enabled=true

#cookie druid
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
#session druid
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true
#session\u7EDF\u8BA1\u529F\u80FD
spring.datasource.druid.web-stat-filter.session-stat-enable=true

#\u6700\u5927session\u6570
spring.datasource.druid.web-stat-filter.session-stat-max-count=100000

#\u914D\u7F6Espring\u5173\u8054
#\u8BBE\u7F6E\u4F7F\u7528Cglib\u8FDB\u884C\u4EE3\u7406\uFF0C\u56E0\u4E3A\u90E8\u5206\u9700\u8981\u4EE3\u7406\u7684\u4E0D\u662F\u63A5\u53E3\u4E0D\u9002\u7528\u4E8EJDK\u52A8\u6001\u4EE3\u7406\uFF0C\u4F1A\u62A5\u9519
spring.aop.proxy-target-class=true
#spring监控，hello.controller是我的控制层包名，也可以是服务层，用逗号分隔多个监控内容
spring.datasource.druid.aop-patterns=com.alibaba.druid.spring.boot.controller.*


# JPA
spring.jpa.show-sql= true
spring.jpa.hibernate.ddl-auto=create-drop
